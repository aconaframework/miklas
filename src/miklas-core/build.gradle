/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'
apply plugin: 'java'
apply plugin: 'eclipse'

sourceCompatibility = 1.8
version = '1.0'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
	mavenCentral()
    
    //Jade repo
    //maven {
    //    url "http://jade.tilab.com/maven/"
    //}
}

dependencies {
	//JGameGrid game engine
	compile files('../../libs/JGameGrid.jar')	//Download manually and put in libs
	
	//Logger
    compile 'org.slf4j:slf4j-api:1.7.25'
    compile 'ch.qos.logback:logback-core:1.2.3'											//Use logback for this driver
  	compile 'ch.qos.logback:logback-classic:1.2.3'
  	compile 'org.codehaus.janino:janino:2.7.8'	//For Logback filters
    compile 'org.codehaus.janino:commons-compiler:2.7.8'
	
	//Music and sounds
	// https://mvnrepository.com/artifact/javax.media/jmf
	compile group: 'javax.media', name: 'jmf', version: '2.1.1e'
	//MP3codec
	compile files('../../libs/mp3plugin.jar')	//Download manually and put in libs
	
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    // api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    //implementation 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.+'
}

test {
    //systemProperties 'property': 'value'
    //exclude 'at/tuwien/ict/**'
}

//Build jar
jar {
	//Generate a manifest file
  	manifest { 
	  	version = project.version.replace('-','.');		//Create a version in the manifest from the variable "version" of this file
    	//symbolicName = bundleSymbolicName
    	//name = "KORE cogsys"
    	
    	//attributes 'Main-Class': 'at.tuwien.ict.kore.core.launcher.KoreLauncher.java'
  	}
 }
 
// jar {
//  	into('lib') {
//  		from configurations.compile
//  	}
// }
 
 task copyDependencies(type: Copy) {
   from configurations.compile
   into 'dependencies'
}

